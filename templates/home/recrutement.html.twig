{% extends 'base.html.twig' %} {% block title %}Recrutement - {{ parent() }}{% endblock %} {% block stylesheets %}
<link href="{{ asset('assets/css/recrutement.css') }}" rel="stylesheet">
<link href="{{ asset('assets/css/home.css') }}" rel="stylesheet">
{% endblock %} {% block body %}

<main class="main">
    <!-- ======= Hero Section ======= -->
    <section id="hero-carousel" class="hero-carousel">
        <div class="container-fluid p-0" data-aos="fade-up">
            <div class="carousel-container">
                <div id="heroCarousel" class="carousel slide carousel-fade" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="0" class="active"
                            aria-current="true"></button>
                        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="1"></button>
                        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="2"></button>
                    </div>

                    <div class="carousel-inner">
                        <!-- Slide 1 -->
                        <div class="carousel-item active">
                            <img src="{{ asset('/assets/img/carosel3.jpg') }}" class="d-block w-100" alt="...">
                            <div class="carousel-caption d-flex flex-column align-items-center justify-content-center">
                                <h2>{{ 'hero.education'|trans }}</h2>
                            </div>
                        </div>

                        <!-- Slide 2 -->
                        <div class="carousel-item">
                            <img src="{{ asset('/assets/img/carosel2.jpg') }}" class="d-block w-100" alt="...">
                            <div class="carousel-caption d-flex flex-column align-items-center justify-content-center">
                                <h2>{{ 'hero.welcome'|trans }}</h2>
                            </div>
                        </div>

                        <!-- Slide 3 -->
                        <div class="carousel-item">
                            <img src="{{ asset('/assets/img/carosel1.jpg') }}" class="d-block w-100" alt="...">
                            <div class="carousel-caption d-flex flex-column align-items-center justify-content-center">
                                <h2>{{ 'hero.development'|trans }}</h2>
                            </div>
                        </div>
                    </div>

                    <button class="carousel-control-prev" type="button" data-bs-target="#heroCarousel"
                        data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#heroCarousel"
                        data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </div>
    </section>
    <!-- End Hero Carousel -->

    <!-- Nouvelle version de la section des métiers -->
    <section class="montessori-jobs" id="jobs">
        <div class="jobs-container">
            <h2 class="section-title">{{ 'job.section.title'|trans }}</h2>
            <p class="section-subtitle">{{ 'job.section.subtitle'|trans }}</p>

            <div class="jobs-categories">
                <!-- Catégorie: Équipe Pédagogique -->
                <div class="job-category" data-category="pedagogique">
                    <div class="category-header">
                        <div class="category-icon">
                            <i class="bi bi-book"></i>
                        </div>
                        <h3>{{ 'job.team.education.title'|trans }}</h3>
                    </div>
                    <div class="category-content">
                        <div class="positions-list">
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.education.roles.0'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.education.roles.1'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.education.roles.2'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.education.roles.3'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Catégorie: Équipe Administrative -->
                <div class="job-category" data-category="administrative">
                    <div class="category-header">
                        <div class="category-icon">
                            <i class="bi bi-briefcase"></i>
                        </div>
                        <h3>{{ 'job.team.admin.title'|trans }}</h3>
                    </div>
                    <div class="category-content">
                        <div class="positions-list">
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.admin.roles.0'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.admin.roles.1'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Catégorie: Équipe Support -->
                <div class="job-category" data-category="support">
                    <div class="category-header">
                        <div class="category-icon">
                            <i class="bi bi-gear"></i>
                        </div>
                        <h3>{{ 'job.team.hse.title'|trans }}</h3>
                    </div>
                    <div class="category-content">
                        <div class="positions-list">
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.hse.roles.0'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.hse.roles.1'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.hse.roles.2'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.hse.roles.3'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.hse.roles.4'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.hse.roles.5'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Catégorie: Activités Extrascolaires -->
                <div class="job-category" data-category="extrascolaire">
                    <div class="category-header">
                        <div class="category-icon">
                            <i class="bi bi-palette"></i>
                        </div>
                        <h3>{{ 'job.team.extras.title'|trans }}</h3>
                    </div>
                    <div class="category-content">
                        <div class="positions-list">
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.extras.roles.0'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.extras.roles.1'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.extras.roles.2'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Catégorie: Équipe Santé -->
                <div class="job-category" data-category="sante">
                    <div class="category-header">
                        <div class="category-icon">
                            <i class="bi bi-heart-pulse"></i>
                        </div>
                        <h3>{{ 'job.team.health.title'|trans }}</h3>
                    </div>
                    <div class="category-content">
                        <div class="positions-list">
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.health.roles.0'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.health.roles.1'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.health.roles.2'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Catégorie: Équipe Marketing -->
                <div class="job-category" data-category="marketing">
                    <div class="category-header">
                        <div class="category-icon">
                            <i class="bi bi-megaphone"></i>
                        </div>
                        <h3>{{ 'job.team.marketing.title'|trans }}</h3>
                    </div>
                    <div class="category-content">
                        <div class="positions-list">
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.marketing.roles.0'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.marketing.roles.1'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                            <div class="position-item">
                                <span class="position-name">{{ 'job.team.marketing.roles.2'|trans }}</span>
                                <button class="position-details-btn" aria-label="Voir détails">+</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Call to Action -->
            <div class="jobs-cta">
                <div class="cta-content">
                    <h3>{{ 'job.cta.title'|trans }}</h3>
                    <p>{{ 'job.cta.description'|trans }}</p>
                    <button class="cta-button" data-bs-toggle="modal" data-bs-target="#jobApplicationModal">
                        {{ 'job.cta.button'|trans }}
                    </button>
                </div>
                <div class="cta-image">
                    <img src="{{asset('assets/img/postule.jpg')}}" alt="Rejoignez notre équipe Montessori" />
                </div>
            </div>
        </div>
    </section>
    <!-- End Section: Nos Métiers Montessori -->
    <div class="modal fade" id="jobApplicationModal" tabindex="-1" aria-labelledby="jobApplicationModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="jobApplicationModalLabel">
                        <i class="bi bi-person-plus me-2"></i>
                        {{ 'job_application.title'|trans }}
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Progress bar -->
                    <div class="form-progress mb-4">
                        <div class="form-progress-bar" id="formProgressBar"></div>
                    </div>

                    {{ form_start(form, {'attr': {'id': 'jobApplicationForm', 'class': 'needs-validation', 'novalidate':
                    true}}) }}

                    <!-- Informations personnelles -->
                    <div class="form-section">
                        <h4><i class="bi bi-person me-2"></i>{{ 'job_application.personal_info'|trans }}</h4>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.nom) }}
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.prenom) }}
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.dateNaissance) }}
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.lieuResidence) }}
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.nationalite) }}
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="form-check mt-4">
                                        {{ form_widget(form.permisTravail) }}
                                        {{ form_label(form.permisTravail) }}
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.telephone) }}
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.email) }}
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Candidature -->
                    <div class="form-section">
                        <h4><i class="bi bi-briefcase me-2"></i>{{ 'job_application.application'|trans }}</h4>
                        <div class="form-group">
                            {{ form_row(form.posteSouhaite) }}
                        </div>
                        <div class="form-group">
                            {{ form_row(form.raisonInteretPoste) }}
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_label(form.cvFilename) }}
                                    {{ form_widget(form.cvFilename) }}
                                    <span id="cv-filename" class="filename-display text-muted small d-block mt-1">{{
                                        'job_application.no_file_selected'|trans }}</span>
                                    {{ form_errors(form.cvFilename) }}
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_label(form.motivationFileName) }}
                                    {{ form_widget(form.motivationFileName) }}
                                    <span id="motivation-filename"
                                        class="filename-display text-muted small d-block mt-1">{{
                                        'job_application.no_file_selected'|trans }}</span>
                                    {{ form_errors(form.motivationFileName) }}
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Langues -->
                    <div class="form-section">
                        <h4><i class="bi bi-translate me-2"></i>{{ 'job_application.languages'|trans }}</h4>
                        <div class="languages-section">
                            {% for langue in form.langues %}
                            <div class="language-item card mb-3">
                                <div class="card-body">
                                    {{ form_widget(langue.nom, {'attr': {'class': 'd-none'}}) }}
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0 text-primary">{{ langue.nom.vars.value }}</h5>
                                        <div class="col-6">
                                            {{ form_label(langue.niveau, 'job_application.niveau_maitrise'|trans,
                                            {'label_attr': {'class':
                                            'visually-hidden'}}) }}
                                            {{ form_widget(langue.niveau, {'attr': {'class': 'form-select',
                                            'placeholder': 'job_application.language_levels.select'|trans}}) }}
                                            {{ form_errors(langue.niveau) }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>

                    <!-- Motivation et vision -->
                    <div class="form-section">
                        <h4><i class="bi bi-heart me-2"></i>{{ 'job_application.motivation'|trans }}</h4>
                        <div class="form-group">
                            {{ form_row(form.motivationMMA) }}
                        </div>
                        <div class="form-group">
                            {{ form_row(form.contributionMMA) }}
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.disponibilite) }}
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_row(form.engagement) }}
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center">
                        {{ form_row(form.submit) }}
                    </div>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</main>
{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        if (typeof AOS !== 'undefined') {
            const benefitsBoxes = document.querySelectorAll('.benefits-box');
            benefitsBoxes.forEach((box, index) => {
                box.setAttribute('data-aos', 'fade-up');
                box.setAttribute('data-aos-delay', `${index * 100}`);
            });
            AOS.init();
        }

        // Form validation and submission
        const form = document.getElementById('jobApplicationForm');
        const progressBar = document.getElementById('formProgressBar');
        const formSections = document.querySelectorAll('.form-section');

        // Update progress bar
        function updateProgressBar() {
            let filledInputs = 0;
            let totalInputs = 0;

            form.querySelectorAll('input, select, textarea').forEach(input => {
                if (input.type !== 'hidden' && input.name !== '_token') {
                    totalInputs++;
                    if (input.value && input.value.trim() !== '') {
                        filledInputs++;
                    }
                }
            });

            const progress = (filledInputs / totalInputs) * 100;
            progressBar.style.width = `${progress}%`;
        }

        // Add event listeners to form inputs
        form.querySelectorAll('input, select, textarea').forEach(input => {
            input.addEventListener('input', updateProgressBar);
            input.addEventListener('change', updateProgressBar);
        });

        // Initial progress update
        updateProgressBar();

        // Form submission with AJAX
        form.addEventListener('submit', function (e) {
            e.preventDefault();
            e.stopPropagation();

            if (form.checkValidity()) {
                const submitBtn = form.querySelector('button[type="submit"]');
                const originalText = submitBtn.innerHTML;

                // Show loading state - Use translations
                const loadingText = '{{ "Envoi en cours..."|trans }}'; // Vous devriez ajouter cette traduction
                submitBtn.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> ${loadingText}`;
                submitBtn.disabled = true;

                // Create FormData for file upload
                const formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Success message
                            const modal = bootstrap.Modal.getInstance(document.getElementById('jobApplicationModal'));
                            modal.hide();

                            // Show success alert
                            const alertDiv = document.createElement('div');
                            alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                            alertDiv.style.zIndex = '9999';
                            alertDiv.innerHTML = `
                    <i class="bi bi-check-circle me-2"></i>
                    ${data.message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                            document.body.appendChild(alertDiv);

                            // Reset form
                            form.reset();
                            form.classList.remove('was-validated');
                            updateProgressBar();

                            // Reset file inputs display
                            const noFileText = '{{ "job_application.no_file_selected"|trans }}';
                            document.getElementById('cv-filename').textContent = noFileText;
                            document.getElementById('motivation-filename').textContent = noFileText;

                            // Remove alert after 5 seconds
                            setTimeout(() => {
                                alertDiv.remove();
                            }, 5000);
                        } else {
                            // Show specific errors
                            let errorMessage = data.message || '{{ "job_application.messages.error"|trans }}';

                            // If there are specific field errors, add them
                            if (data.errors && Array.isArray(data.errors)) {
                                errorMessage += '<ul class="mt-2 mb-0">';
                                data.errors.forEach(error => {
                                    errorMessage += `<li>${error}</li>`;
                                });
                                errorMessage += '</ul>';
                            }

                            // If there are field-specific errors, display them
                            if (data.fieldErrors) {
                                Object.keys(data.fieldErrors).forEach(fieldName => {
                                    const field = form.querySelector(`[name*="${fieldName}"]`);
                                    if (field) {
                                        // Remove existing error messages for this field
                                        const existingError = field.parentElement.querySelector('.field-error');
                                        if (existingError) {
                                            existingError.remove();
                                        }

                                        // Add new error message
                                        const errorDiv = document.createElement('div');
                                        errorDiv.className = 'field-error text-danger small mt-1';
                                        errorDiv.innerHTML = data.fieldErrors[fieldName].join(', ');
                                        field.parentElement.appendChild(errorDiv);

                                        // Add invalid class to field
                                        field.classList.add('is-invalid');
                                    }
                                });
                            }

                            // Show general error message
                            const alertDiv = document.createElement('div');
                            alertDiv.className = 'alert alert-danger alert-dismissible fade show';
                            alertDiv.innerHTML = `
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    ${errorMessage}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                            form.insertBefore(alertDiv, form.firstChild);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        const alertDiv = document.createElement('div');
                        alertDiv.className = 'alert alert-danger alert-dismissible fade show';
                        alertDiv.innerHTML = `
                <i class="bi bi-exclamation-triangle me-2"></i>
                {{ "Une erreur est survenue. Veuillez réessayer."|trans }}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
                        form.insertBefore(alertDiv, form.firstChild);
                    })
                    .finally(() => {
                        // Reset button state
                        submitBtn.innerHTML = originalText;
                        submitBtn.disabled = false;
                    });
            } else {
                // Show validation errors for HTML5 validation
                form.classList.add('was-validated');

                // Find first invalid field and scroll to it
                const firstInvalidField = form.querySelector(':invalid');
                if (firstInvalidField) {
                    firstInvalidField.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    firstInvalidField.focus();
                }
            }
        });

        // File input change handler
        form.querySelectorAll('input[type="file"]').forEach(fileInput => {
            fileInput.addEventListener('change', function () {
                const file = this.files[0];
                const targetId = this.getAttribute('data-filename-target');

                // Find the corresponding filename display element
                let display = null;
                if (targetId) {
                    display = document.getElementById(targetId);
                }

                // If no target specified, try to find display element by convention
                if (!display) {
                    if (this.name === 'job_application[cvFilename]') {
                        display = document.getElementById('cv-filename');
                    } else if (this.name === 'job_application[motivationFileName]') {
                        display = document.getElementById('motivation-filename');
                    }
                }

                // Still no display element? Create one
                if (!display) {
                    display = document.createElement('span');
                    display.className = 'filename-display text-muted small d-block mt-1';
                    this.parentElement.appendChild(display);
                }

                if (file) {
                    display.textContent = file.name;
                    display.classList.remove('text-muted');
                    display.classList.add('text-success');
                } else {
                    display.textContent = '{{ "job_application.no_file_selected"|trans }}';
                    display.classList.remove('text-success');
                    display.classList.add('text-muted');
                }
            });
        });

        // Modal events
        const modal = document.getElementById('jobApplicationModal');
        modal.addEventListener('hidden.bs.modal', function () {
            // Reset form when modal is closed
            form.reset();
            form.classList.remove('was-validated');
            updateProgressBar();

            // Remove any alerts
            form.querySelectorAll('.alert').forEach(alert => alert.remove());

            // Reset file inputs display
            const noFileText = '{{ "job_application.no_file_selected"|trans }}';
            document.getElementById('cv-filename').textContent = noFileText;
            document.getElementById('motivation-filename').textContent = noFileText;
        });

        // Ajoutez cette fonction pour nettoyer les erreurs lors de la saisie
        function clearFieldError(field) {
            // Remove is-invalid class
            field.classList.remove('is-invalid');

            // Remove error message
            const existingError = field.parentElement.querySelector('.field-error');
            if (existingError) {
                existingError.remove();
            }
        }

        // Ajoutez ces event listeners après la création du formulaire
        form.querySelectorAll('input, select, textarea').forEach(field => {
            field.addEventListener('input', function () {
                clearFieldError(this);
            });

            field.addEventListener('change', function () {
                clearFieldError(this);
            });
        });

        // Fonction pour nettoyer toutes les erreurs
        function clearAllErrors() {
            // Remove all alert messages
            form.querySelectorAll('.alert').forEach(alert => alert.remove());

            // Remove all field errors
            form.querySelectorAll('.field-error').forEach(error => error.remove());

            // Remove is-invalid classes
            form.querySelectorAll('.is-invalid').forEach(field => {
                field.classList.remove('is-invalid');
            });
        }

        // Nettoyer les erreurs quand le modal s'ouvre
        modal.addEventListener('show.bs.modal', function () {
            clearAllErrors();
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Animation pour les catégories d'emploi
        const categories = document.querySelectorAll('.job-category');

        // Animation d'entrée avec un léger délai entre chaque catégorie
        categories.forEach((category, index) => {
            setTimeout(() => {
                category.style.opacity = 1;
                category.style.transform = 'translateY(0)';
            }, 100 * index);
        });

        // Gestion des boutons de détails de poste
        const detailButtons = document.querySelectorAll('.position-details-btn');

        detailButtons.forEach(button => {
            button.addEventListener('click', function () {
                const positionName = this.parentElement.querySelector('.position-name').textContent;

                // Ici vous pouvez ajouter le code pour afficher les détails du poste
                // Par exemple, ouvrir une modal avec les détails du poste spécifique
                console.log(`Afficher les détails pour: ${positionName}`);

                // À compléter avec l'implémentation de la modal ou autre méthode d'affichage
            });
        });
    });
</script>
{% endblock %}
{% endblock %}